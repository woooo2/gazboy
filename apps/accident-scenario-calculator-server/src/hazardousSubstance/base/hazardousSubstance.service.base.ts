/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";

import {
  Prisma,
  HazardousSubstance as PrismaHazardousSubstance,
  AccidentScenario as PrismaAccidentScenario,
} from "@prisma/client";

export class HazardousSubstanceServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.HazardousSubstanceCountArgs, "select">
  ): Promise<number> {
    return this.prisma.hazardousSubstance.count(args);
  }

  async hazardousSubstances(
    args: Prisma.HazardousSubstanceFindManyArgs
  ): Promise<PrismaHazardousSubstance[]> {
    return this.prisma.hazardousSubstance.findMany(args);
  }
  async hazardousSubstance(
    args: Prisma.HazardousSubstanceFindUniqueArgs
  ): Promise<PrismaHazardousSubstance | null> {
    return this.prisma.hazardousSubstance.findUnique(args);
  }
  async createHazardousSubstance(
    args: Prisma.HazardousSubstanceCreateArgs
  ): Promise<PrismaHazardousSubstance> {
    return this.prisma.hazardousSubstance.create(args);
  }
  async updateHazardousSubstance(
    args: Prisma.HazardousSubstanceUpdateArgs
  ): Promise<PrismaHazardousSubstance> {
    return this.prisma.hazardousSubstance.update(args);
  }
  async deleteHazardousSubstance(
    args: Prisma.HazardousSubstanceDeleteArgs
  ): Promise<PrismaHazardousSubstance> {
    return this.prisma.hazardousSubstance.delete(args);
  }

  async findAccidentScenarios(
    parentId: string,
    args: Prisma.AccidentScenarioFindManyArgs
  ): Promise<PrismaAccidentScenario[]> {
    return this.prisma.hazardousSubstance
      .findUniqueOrThrow({
        where: { id: parentId },
      })
      .accidentScenarios(args);
  }
}
