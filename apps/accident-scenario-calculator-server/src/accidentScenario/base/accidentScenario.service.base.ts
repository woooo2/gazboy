/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";

import {
  Prisma,
  AccidentScenario as PrismaAccidentScenario,
  Pipeline as PrismaPipeline,
  HazardousSubstance as PrismaHazardousSubstance,
} from "@prisma/client";

export class AccidentScenarioServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.AccidentScenarioCountArgs, "select">
  ): Promise<number> {
    return this.prisma.accidentScenario.count(args);
  }

  async accidentScenarios(
    args: Prisma.AccidentScenarioFindManyArgs
  ): Promise<PrismaAccidentScenario[]> {
    return this.prisma.accidentScenario.findMany(args);
  }
  async accidentScenario(
    args: Prisma.AccidentScenarioFindUniqueArgs
  ): Promise<PrismaAccidentScenario | null> {
    return this.prisma.accidentScenario.findUnique(args);
  }
  async createAccidentScenario(
    args: Prisma.AccidentScenarioCreateArgs
  ): Promise<PrismaAccidentScenario> {
    return this.prisma.accidentScenario.create(args);
  }
  async updateAccidentScenario(
    args: Prisma.AccidentScenarioUpdateArgs
  ): Promise<PrismaAccidentScenario> {
    return this.prisma.accidentScenario.update(args);
  }
  async deleteAccidentScenario(
    args: Prisma.AccidentScenarioDeleteArgs
  ): Promise<PrismaAccidentScenario> {
    return this.prisma.accidentScenario.delete(args);
  }

  async getPipeline(parentId: string): Promise<PrismaPipeline | null> {
    return this.prisma.accidentScenario
      .findUnique({
        where: { id: parentId },
      })
      .pipeline();
  }

  async getHazardousSubstance(
    parentId: string
  ): Promise<PrismaHazardousSubstance | null> {
    return this.prisma.accidentScenario
      .findUnique({
        where: { id: parentId },
      })
      .hazardousSubstance();
  }
}
